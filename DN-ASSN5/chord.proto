syntax = "proto3";
import "google/protobuf/empty.proto";

service chord {
    // For registry
    rpc register(address) returns(assigned);
    rpc deregister(id) returns(msg);
    rpc populate_finger_table(populate_id) returns(stream finger_table);
    rpc get_chord_info(google.protobuf.Empty) returns(stream nodes_list);

    // For nodes
    rpc get_finger_table(google.protobuf.Empty) returns(stream finger_table);
    rpc save(key_text) returns (success_msg);
}

message address {
    string addr = 1;
}

message assigned{
    string id = 1;
    string m = 2;
}

message id {
    int32 deregister_id = 1;
}

message msg {
    bool success = 1;
    string message = 2;
}

message populate_id {
    int32 populate_id = 1;
}

message pairs {
    string address = 1;
}

message nodes_list {
    string address = 1;
}



// Rpc arguments
message finger_table {
    string key = 1;
    string address = 2;
}

message key_text{
    string key = 1;
    string text = 2;
}

message success_msg{
    bool success = 1;
    string msg = 2;
}
